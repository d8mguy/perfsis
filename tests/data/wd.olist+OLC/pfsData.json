{"cube":{"ident":"olist+OLC","description":" Test various aspects of olist and olistCached. For each different substn (olist plus OLC with and without flushing) run 1M lookups with interspersed add+remove steps. Specifically, after grainSize lookups (currently set to 20K and 50K) do the fraction of that number of add+rmv ops, the fraction in lookupsMultiple, expressed in %. For various steady state sizes, run both olist and OLC, mixing phases of add+delete with lookup until 1M lookups are done. The grainSize parameter controls how many phases, stepping from 16K to 64K lookups per phase The lookupsMultiple parameter controls fraction of lookups vs add+delete","params":[{"ident":"listSize","explanation":"steady state size of list","unit":"\"#{this/1000}K\"","elements":["20000","80000","180000","320000"]},{"ident":"lookupsMultiple","explanation":"100x the fraction of lookups vs add+delete in each phase","unit":"","elements":["10","30","90"]},{"ident":"grainSize","explanation":"number of lookups per phase","unit":"\"#{this/1000}K\"","elements":["20000","50000"]}],"outputs":[{"ident":"lookupTime","explanation":"avg lookup time across lookup phase","unit":"nanosecond"},{"ident":"insertTime","explanation":"avg insert time","unit":"nanosecond"},{"ident":"removeTime","explanation":"avg remove time","unit":"nanosecond"}]},"substns":[{"ident":"IMPLEM","explanation":"olist or OLC, with or without flushing before each lookup phase","unit":"","elements":["olist","OLC with flushing","OLC without flushing"]}],"contexts":[{"key":"compiler","value":["2023/11/12"]},{"key":"runtime","value":["machbook M1 pro/16GB"]},{"key":"version","value":["bigger lists"]}],"version":0}